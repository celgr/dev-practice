---
import DefaultLayout from "../../layouts/DefaultLayout.astro";
---

<DefaultLayout>
  <div class="container">
    <div class="target">Hover on me!</div>
    <!-- <div class="cursor-follower">Cursor</div> -->
  </div>
</DefaultLayout>

<!-- <style lang="scss" is:global>
  header {
    position: fixed;
    top: 0;
  }
</style> -->

<style lang="scss">
  .container {
    // width: 100vw;
    // height: 100vh;
    // display: flex;
    // justify-content: center;
    // align-items: center;
    // cursor: none;
  }

  .target {
    display: inline-block;
    background: #cccccc;
    padding: 8px 16px;
    border-radius: 9999px;
  }

  // .cursor-follower {
  //   user-select: none;
  //   position: absolute;
  //   left: 0;
  //   top: 0;

  //   transform: translate3d(-50%, -50%, 0);

  //   padding: 8px;
  //   aspect-ratio: 1/1;
  //   background: #111;
  //   color: white;
  //   border-radius: 50%;
  //   display: flex;
  //   justify-content: center;
  //   align-items: center;
  // }
</style>

<script>
  import { gsap } from "gsap";

  const target = document.querySelector<HTMLElement>(".target")!;

  const targetX = target.offsetLeft;
  const targetY = target.offsetTop;

  const range = 10;

  const onMouseMove = (e: MouseEvent) => {
    // gsap.to(".cursor-follower", {
    //   x: e.pageX,
    //   y: e.pageY,
    // });

    const isInXRange =
      targetX - range <= e.pageX &&
      e.pageX <= targetX + target.clientWidth + range;
    const isInYRange =
      targetY - range <= e.pageY &&
      e.pageY <= targetY + target.clientHeight + range;

    if (isInXRange && isInYRange) {
      console.log("in range!");
      gsap.set(".target", {
        position: "absolute",
        left: 0,
        top: 0,
      });
      gsap.to(".target", {
        x: e.pageX - target.clientWidth / 2,
        y: e.pageY - target.clientHeight / 2,
      });
    } else {
      const tl = gsap.timeline();

      tl.to(".target", {
        x: "auto",
        y: "auto",
        ease: "none",
      });
      tl.set(".target", {
        position: "relative",
      });
    }
  };

  document.addEventListener("mousemove", onMouseMove, { passive: false });
</script>
